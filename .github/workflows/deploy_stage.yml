name: AIO App CI

on:
  push:
    branches:
      - main
jobs:
  deploy:
    name: Deploy to Stage
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 1
      matrix:
        node-version: ['20']
        os: [ubuntu-latest]
    env:
      ENABLE_LOG_FORWARDING: ${{ secrets.ENABLE_LOG_FORWARDING }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: npm install
        run: npm i
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y expect
      - name: Setup CLI
        uses: adobe/aio-cli-setup-action@1.3.0
        with:
          os: ${{ matrix.os }}
          version: 10.x.x
      - name: Auth
        uses: adobe/aio-apps-action@3.3.0
        with:
          os: ${{ matrix.os }}
          command: oauth_sts
          CLIENTID: ${{ secrets.CLIENTID_STAGE }}
          CLIENTSECRET: ${{ secrets.CLIENTSECRET_STAGE }}
          TECHNICALACCOUNTID: ${{ secrets.TECHNICALACCID_STAGE }}
          TECHNICALACCOUNTEMAIL: ${{ secrets.TECHNICALACCEMAIL_STAGE }}
          IMSORGID: ${{ secrets.IMSORGID_STAGE }}
          SCOPES: ${{ secrets.SCOPES_STAGE }}
      - name: Configure log forwarding for New Relic
        run: |
          # Use expect to handle the interactive prompt and select "A"
          expect <<EOF
          spawn aio app config set log-forwarding
          expect "select log forwarding destination" {
            send {\033[B}  # Down arrow to 2nd option
            send {\033[B}  # Down arrow to 3rd option
            send {\033[B}  # Down arrow to 4th option
          }
          expect "base URI" { send "${{ secrets.NEW_RELIC_BASE_URI }}\r" }
          expect "license key" { send "${{ secrets.NEW_RELIC_LICENSE_KEY }}\r" }
          expect eof
          EOF
        env:
          NEW_RELIC_BASE_URI: ${{ secrets.NEW_RELIC_BASE_URI }}
          NEW_RELIC_LICENSE_KEY: ${{ secrets.NEW_RELIC_LICENSE_KEY }}
          AIO_RUNTIME_NAMESPACE: ${{ vars.AIO_RUNTIME_NAMESPACE_STAGE }}
          AIO_RUNTIME_AUTH: ${{ secrets.AIO_RUNTIME_AUTH_STAGE }}
          AIO_PROJECT_ID: ${{ secrets.AIO_PROJECT_ID_STAGE }}
          AIO_PROJECT_NAME: ${{ secrets.AIO_PROJECT_NAME_STAGE }}
          AIO_PROJECT_ORG_ID: ${{ vars.AIO_PROJECT_ORG_ID_STAGE }}
          AIO_PROJECT_WORKSPACE_ID: ${{ secrets.AIO_PROJECT_WORKSPACE_ID_STAGE }}
          AIO_PROJECT_WORKSPACE_NAME: ${{ secrets.AIO_PROJECT_WORKSPACE_NAME_STAGE }}
          AIO_PROJECT_WORKSPACE_DETAILS_SERVICES: ${{ secrets.AIO_PROJECT_WORKSPACE_DETAILS_SERVICES_STAGE }}

      - name: Build
        env:
          AIO_RUNTIME_NAMESPACE: ${{ vars.AIO_RUNTIME_NAMESPACE_STAGE }}
        uses: adobe/aio-apps-action@3.3.0
        with:
          os: ${{ matrix.os }}
          command: build
      - name: Deploy
        env:
          AIO_RUNTIME_NAMESPACE: ${{ vars.AIO_RUNTIME_NAMESPACE_STAGE }}
          AIO_RUNTIME_AUTH: ${{ secrets.AIO_RUNTIME_AUTH_STAGE }}
          AIO_PROJECT_ID: ${{ secrets.AIO_PROJECT_ID_STAGE }}
          AIO_PROJECT_NAME: ${{ secrets.AIO_PROJECT_NAME_STAGE }}
          AIO_PROJECT_ORG_ID: ${{ vars.AIO_PROJECT_ORG_ID_STAGE }}
          AIO_PROJECT_WORKSPACE_ID: ${{ secrets.AIO_PROJECT_WORKSPACE_ID_STAGE }}
          AIO_PROJECT_WORKSPACE_NAME: ${{ secrets.AIO_PROJECT_WORKSPACE_NAME_STAGE }}
          AIO_PROJECT_WORKSPACE_DETAILS_SERVICES: ${{ secrets.AIO_PROJECT_WORKSPACE_DETAILS_SERVICES_STAGE }}
          SAMPLE_NAME: ${{ secrets.NAME }}
        uses: adobe/aio-apps-action@3.3.0
        with:
          os: ${{ matrix.os }}
          command: deploy
          noPublish: true
